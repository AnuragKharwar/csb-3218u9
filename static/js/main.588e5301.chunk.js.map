{"version":3,"sources":["components/Index.jsx","components/Todo.jsx","components/App.jsx","index.js"],"names":["Index","props","_useState","useState","_useState2","_slicedToArray","inputtext","setInputText","React","createElement","className","onChange","event","newvalue","target","value","type","onClick","onadd","Todo","oncheked","id","text","App","items","setItems","deleteitem","previtem","filter","item","index","prevItem","concat","_toConsumableArray","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"0NA4BeA,MA1Bf,SAAeC,GACb,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAO9B,OACEI,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOE,SAXb,SAAaC,GACX,IAAMC,EAAWD,EAAME,OAAOC,MAC9BR,EAAaM,IASaG,KAAK,OAAOD,MAAOT,IACzCE,IAAAC,cAAA,UACEQ,QAAS,WACPhB,EAAMiB,MAAMZ,KAGdE,IAAAC,cAAA,YAAM,WCdDU,MANf,SAAclB,GAIZ,OAAOO,IAAAC,cAAA,OAAKQ,QAHZ,WACEhB,EAAMmB,SAASnB,EAAMoB,MAEOpB,EAAMqB,OCqCvBC,MAvCf,WACE,IAAArB,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BsB,EAAKpB,EAAA,GAAEqB,EAAQrB,EAAA,GAOtB,SAASsB,EAAWL,GAClBI,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAUT,QAKvB,OACEb,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACT,EAAK,CAACkB,MAfX,SAAiBZ,GACfmB,GAAS,SAACM,GACR,MAAM,GAANC,OAAAC,YAAWF,GAAQ,CAAEzB,UAcrBE,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGe,EAAMU,KAAI,SAACC,EAAUL,GACpB,OACEtB,IAAAC,cAAA,UACED,IAAAC,cAACU,EAAI,CACHC,SAAUM,EACVU,IAAKN,EACLT,GAAIS,EACJR,KAAMa,YC5BxBE,IAASC,OAAO9B,IAAAC,cAACc,EAAG,MAAKgB,SAASC,eAAe,U","file":"static/js/main.588e5301.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Index(props) {\r\n  const [inputtext, setInputText] = useState(\"\");\r\n\r\n  function Add(event) {\r\n    const newvalue = event.target.value;\r\n    setInputText(newvalue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <div className=\"form\">\r\n        <input onChange={Add} type=\"text\" value={inputtext} />\r\n        <button\r\n          onClick={() => {\r\n            props.onadd(inputtext);\r\n          }}\r\n        >\r\n          <span>Add</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Index;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Todo(props) {\r\n  function cliked() {\r\n    props.oncheked(props.id);\r\n  }\r\n  return <div onClick={cliked}>{props.text}</div>;\r\n}\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\nimport Index from \"./Index\";\nimport Todo from \"./Todo\";\n\nfunction App() {\n  const [items, setItems] = useState([]); // array of items\n\n  function Clicked(inputtext) {\n    setItems((prevItem) => {\n      return [...prevItem, inputtext];\n    });\n  }\n  function deleteitem(id) {\n    setItems((previtem) => {\n      return previtem.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <Index onadd={Clicked} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => {\n            return (\n              <li>\n                <Todo\n                  oncheked={deleteitem} //props\n                  key={index}\n                  id={index}\n                  text={todoItem}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}